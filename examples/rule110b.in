// rule-110 implementation using arrays
package main

@(extern)
printf :: func(msg: string)

display :: func(row: [128]int, len: int) {
    for i := 0; i < len; i = i + 1 {
        if row[i] == 1 {
            printf("#")
        } else {
            printf(".")
        }
    }

    printf("\n")
}

update :: func(row: [128]int, len: int) {
    state := row[0]

    // Start from 1 as we update the previous cell
    // based on the current state
    for i := 1; i < len; i = i + 1 {
        state = (state << 1) | row[i]
        state = state & 7

        row[i-(1)] = (110 >> state) & 1
    }
}

@(export)
main :: func() -> int {
    row : [128]int
    len := 128

    // Initialize the first row
    row[126] = 1

    for i := 0; i < len - 2; i = i + 1 {
        display(row, len)
        update(row, len)
    }

    return 0
}